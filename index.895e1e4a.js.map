{"mappings":"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","sources":["<anon>","src/js/index.js"],"sourcesContent":["var $85a5f86b715fe7db$exports = {};\n// import { geniusApiKey, musixApiKey } from \"../..\";\nconst $85a5f86b715fe7db$var$API_URL = \"https://api.musixmatch.com/ws/1.1/\";\n// const apiKey = process.env.;\n// const apiKeyGen = geniusApiKey;\nconst $85a5f86b715fe7db$var$errorMessage = \"We couldn't find lyrics. try something else ...\";\n// Search Selector\nconst $85a5f86b715fe7db$var$searchForm = document.querySelector(\".search\");\nconst $85a5f86b715fe7db$var$searchInputText = document.querySelector(\".search__field\");\nconst $85a5f86b715fe7db$var$searchResultView = document.querySelector(\".results\");\nlet $85a5f86b715fe7db$var$numResults = 50; // numbers of results - range is 0 - 100\nconst $85a5f86b715fe7db$var$trackContainer = document.querySelector(\".music\");\nconst $85a5f86b715fe7db$var$headEl = document.getElementsByTagName(\"head\")[0];\n// pagination selector\nconst $85a5f86b715fe7db$var$paginationContainer = document.querySelector(\".pagination\");\n// modal selectors\nconst $85a5f86b715fe7db$var$modal = document.querySelector(\".modal\");\nconst $85a5f86b715fe7db$var$showAboutUs = document.querySelector(\".nav__btn--about-us\");\nconst $85a5f86b715fe7db$var$closeBtn = document.querySelector(\".modal__btn-close\");\nconsole.log(`${\"8a497867c325bbcf4b4c9d286f8450bb\"}`);\nlet $85a5f86b715fe7db$var$state = {\n    music: {},\n    search: {\n        query: \"\",\n        results: [],\n        resultsView: [],\n        perPage: 10,\n        page: 1\n    }\n};\nconst $85a5f86b715fe7db$var$getJSON = async function(url) {\n    try {\n        const res = await fetch(url);\n        const data = await res.json();\n        // first: for when api authentication is wrong, second: for when no track found.\n        if (data.message.body.length === 0) throw new Error(`Status Code: ${data.message.header.status_code}`);\n        else if (data.message.header.available === 0) throw new Error(`Not found Any Track!`);\n        return data;\n    } catch (err) {\n        throw err;\n    }\n};\nconst $85a5f86b715fe7db$var$getQuery = function() {\n    const query = $85a5f86b715fe7db$var$searchInputText.value;\n    $85a5f86b715fe7db$var$searchInputText.value = \"\";\n    return query;\n};\nconst $85a5f86b715fe7db$var$renderSpinner = function(parentElement) {\n    const markup = `\r\n  <div class=\"u-margin-top-big spinner\"></div>\r\n  `;\n    parentElement.innerHTML = \"\";\n    parentElement.insertAdjacentHTML(\"afterbegin\", markup);\n};\nconst $85a5f86b715fe7db$var$renderError = function(parentElement, message = $85a5f86b715fe7db$var$errorMessage) {\n    if (message.includes(\"is not valid JSON\")) message = \"There is some problem with Genius Api. Try again later.\";\n    const markup = `\r\n          <div class=\"error\">\r\n            <div>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" class=\"svg-icon\" style=\"color:#e40000;\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\" />\r\n          </svg>\r\n          \r\n            </div>\r\n            <p>${message}</p>\r\n          </div>\r\n  `;\n    parentElement.innerHTML = \"\";\n    parentElement.insertAdjacentHTML(\"afterbegin\", markup);\n};\nconst $85a5f86b715fe7db$var$loadLyrics = async function() {\n    try {\n        let markup;\n        // Taking id track and putting in id\n        const id = window.location.hash.slice(1);\n        if (!id) return;\n        console.log(id);\n        // 1) Loading Lyrics and Music data\n        // Spinner\n        $85a5f86b715fe7db$var$renderSpinner($85a5f86b715fe7db$var$trackContainer);\n        // taking lyrics data\n        const lyricsData = await $85a5f86b715fe7db$var$getJSON(`${$85a5f86b715fe7db$var$API_URL}track.lyrics.get?commontrack_id=${id}&apikey=${apiKey}`);\n        // taking track data\n        const data = await $85a5f86b715fe7db$var$getJSON(`${$85a5f86b715fe7db$var$API_URL}track.get?commontrack_id=${id}&apikey=${apiKey}`);\n        const dataRes = $85a5f86b715fe7db$var$state.search.results;\n        // Reformating lyricsData\n        let { lyrics: lyrics } = lyricsData.message.body;\n        console.log(lyrics);\n        lyrics = {\n            id: lyrics.lyrics_id,\n            body: lyrics.lyrics_body,\n            script: lyrics.script_tracking_url,\n            imagePixel: lyrics.pixel_tracking_url,\n            copyright: lyrics.lyrics_copyright,\n            updatedTime: lyrics.updated_time\n        };\n        // pushing lyrics.script into <head>\n        const lyricsScript = `<script type=\"text/javascript\" src=\"${lyrics.script}\">`;\n        $85a5f86b715fe7db$var$headEl.insertAdjacentHTML(\"beforeend\", lyricsScript);\n        // Reformating track data\n        let { track: track } = data.message.body;\n        console.log(track);\n        track = {\n            id: track.track_id,\n            title: track.track_name,\n            commontrackId: track.commontrack_id,\n            hasLyrics: track.has_lyrics,\n            explicit: track.explicit,\n            favourite: track.num_favourite,\n            albumId: track.album_id,\n            albumName: track.album_name,\n            artistId: track.artist_id,\n            artistName: track.artist_name,\n            updatedTime: track.updated_time,\n            ...track.primary_genres.music_genre_list.length !== 0 && {\n                genre: track.primary_genres.music_genre_list[0].music_genre.music_genre_name\n            },\n            // genre:\n            //   track.primary_genres.music_genre_list[0].music_genre.music_genre_name,\n            genres: track.primary_genres.music_genre_list\n        };\n        // genuis api\n        const searchUrl = `https://api.genius.com/search?q=${encodeURIComponent(track.artistName + \" \" + track.title)}&access_token=${apiKeyGen}`;\n        const resGen = await fetch(searchUrl);\n        const dataGen = await resGen.json();\n        console.log(resGen);\n        console.log(dataGen);\n        let result = {};\n        if (dataGen.response.hits.length !== 0) {\n            result = dataGen.response.hits[0].result;\n            console.log(result);\n            result = {\n                headerThumbnail: result.header_image_thumbnail_url,\n                headerImage: result.song_art_image_url,\n                ...result.release_date_components && {\n                    releaseDate: result.release_date_components.year\n                },\n                artistImageHeader: result.primary_artist.header_image_url\n            };\n        }\n        // 2) Rendering Lyrics and Music info\n        markup = `\r\n        <figure class=\"artist\">\r\n            <img\r\n              src=\"${result.artistImageHeader ? result.artistImageHeader : \"src/img/404.png\"}\"\r\n              alt=\"${track.artistName ? result.artistName : \"not found\"}\"\r\n              class=\"artist__image\"\r\n          />\r\n        </figure>\r\n        \r\n          \r\n          <div class=\"music__details u-margin-bottom-medium\">\r\n          <img\r\n              src=\"${result.headerImage ? result.headerImage : \"src/img/404.png\"}\"\r\n              alt=\"${track.title ? result.title : \"not found\"}\"\r\n              class=\"music__image\"\r\n          />\r\n            <div class=\"music__info\">\r\n              <p><span>${track.title}</span></p>\r\n              <p>\r\n                <span>${track.artistName}</span> &#9679 <span>${track.albumName}</span>${result.releaseDate ? ` &#9679 <span>${result.releaseDate}</span>` : \"\"}\r\n                ${track.genre ? ` &#9679 <span>${track.genre}</span>` : \"\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n        <div class=\"music__lyrics\">\r\n\r\n        ${!track.hasLyrics ? `<p class=\"paragraph\">\"There is no lyrics for this song or Maybe It's is a instrumental :)\"</p>` : `\r\n                    <p class=\"music__lyrics--body paragraph\">${lyrics.body}</p>\r\n               \r\n                    <img class=\"music__image-pixel\" src=\"${lyrics.imagePixel}\" alt=\"image pixel\" />\r\n                    <div class=\"music__copyright\">\r\n                    <span style=\"line-height:54px;vertical-align:top;\">Lyrics licensed by </span><img src=\"../img/mxm.png\" width=\"184\" height=\"54\" alt=\"MusixMatch\">\r\n                    </div>\r\n                    `}\r\n        </div>\r\n    `;\n        $85a5f86b715fe7db$var$trackContainer.innerHTML = \"\";\n        $85a5f86b715fe7db$var$trackContainer.insertAdjacentHTML(\"afterbegin\", markup);\n    } catch (err) {\n        console.error(`${err} \\u{1F3C0}\\u{1F3C0}\\u{1F3C0}`);\n        $85a5f86b715fe7db$var$renderError($85a5f86b715fe7db$var$trackContainer, `${err}`);\n    }\n};\nconst $85a5f86b715fe7db$var$markupPagination = function() {\n    const numPages = $85a5f86b715fe7db$var$numResults / $85a5f86b715fe7db$var$state.search.perPage;\n    const curPage = $85a5f86b715fe7db$var$state.search.page;\n    // Created Button based on condition\n    const createButton = (classModifier, pathData)=>`\r\n\r\n    <button\r\n      data-goto=\"${classModifier === \"prev\" ? curPage - 1 : curPage + 1}\"\r\n      class=\"pagination__btn btn--inline pagination__btn--${classModifier}\">\r\n\r\n      ${classModifier === \"next\" ? `<span>Page ${curPage + 1}</span>` : \"\"}\r\n      \r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"svg-icon\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"${pathData}\" />\r\n      </svg>\r\n\r\n      ${classModifier === \"prev\" ? `<span>Page ${curPage - 1}</span>` : \"\"}\r\n    </button>\r\n  `;\n    // Page 1, there are other Pages\n    if (curPage === 1 && numPages > 1) return createButton(\"next\", \"M8.25 4.5l7.5 7.5-7.5 7.5\");\n    // Last Page\n    if (curPage === numPages && numPages > 1) return createButton(\"prev\", \"M15.75 19.5L8.25 12l7.5-7.5\");\n    // Other Pages (no first, no last)\n    if (numPages > curPage) {\n        const prevButton = createButton(\"prev\", \"M15.75 19.5L8.25 12l7.5-7.5\");\n        const nextButton = createButton(\"next\", \"M8.25 4.5l7.5 7.5-7.5 7.5\");\n        return prevButton + nextButton;\n    }\n    // Page 1, there are no other Pages\n    return \"\";\n};\nconst $85a5f86b715fe7db$var$renderPagination = function() {\n    const paginationMarkup = $85a5f86b715fe7db$var$markupPagination();\n    // Emptying pagination\n    $85a5f86b715fe7db$var$paginationContainer.innerHTML = \"\";\n    // Render pagination\n    $85a5f86b715fe7db$var$paginationContainer.insertAdjacentHTML(\"afterbegin\", paginationMarkup);\n};\nconst $85a5f86b715fe7db$var$renderSearchResult = function(page = $85a5f86b715fe7db$var$state.search.page) {\n    $85a5f86b715fe7db$var$state.search.page = page;\n    const start = (page - 1) * $85a5f86b715fe7db$var$state.search.perPage; // if page is 1 it will be 0\n    const end = page * $85a5f86b715fe7db$var$state.search.perPage; // // if page is 1 it will be 9\n    $85a5f86b715fe7db$var$state.search.resultsView = $85a5f86b715fe7db$var$state.search.results.slice(start, end);\n    const resultMarkup = $85a5f86b715fe7db$var$state.search.resultsView.map((track)=>`\r\n      <li class=\"preview\">\r\n        <a href=\"#${track.commontrackId}\" class=\"preview__link\">\r\n          <div class=\"preview__data\">\r\n          <h3 class=\"preview__title\">${track.title}</h3>\r\n          <p class=\"preview__artist-album\">${track.artistName}<span> &#9679 </span>${track.albumName}</p>\r\n          </div>\r\n          </a>\r\n          </li>\r\n          `).join(\"\");\n    // Emptying result history\n    $85a5f86b715fe7db$var$searchResultView.innerHTML = \"\";\n    // Render results\n    $85a5f86b715fe7db$var$searchResultView.insertAdjacentHTML(\"afterbegin\", resultMarkup);\n};\nconst $85a5f86b715fe7db$var$loadPagination = function() {\n    $85a5f86b715fe7db$var$paginationContainer.addEventListener(\"click\", function(e) {\n        const btn = e.target.closest(\".pagination__btn\");\n        if (!btn) return;\n        const goToPage = +btn.dataset.goto;\n        // render SearchResult\n        $85a5f86b715fe7db$var$renderSearchResult(goToPage);\n        // render Pagination\n        $85a5f86b715fe7db$var$renderPagination();\n    });\n};\nconst $85a5f86b715fe7db$var$getSearchResultsPage = function(page = $85a5f86b715fe7db$var$state.search.page) {\n    $85a5f86b715fe7db$var$state.search.page = page;\n    const start = (page - 1) * $85a5f86b715fe7db$var$state.search.perPage; // if page is 1 it will be 0\n    const end = page * $85a5f86b715fe7db$var$state.search.perPage; // // if page is 1 it will be 9\n    $85a5f86b715fe7db$var$state.search.resultsView = $85a5f86b715fe7db$var$state.search.results.slice(start, end);\n    return $85a5f86b715fe7db$var$state.search.resultsView;\n};\nconst $85a5f86b715fe7db$var$loadSearchResults = async function() {\n    try {\n        $85a5f86b715fe7db$var$renderSpinner($85a5f86b715fe7db$var$searchResultView);\n        // 1) Get search query\n        const query = await $85a5f86b715fe7db$var$getQuery();\n        if (!query) return;\n        // 2) Load Search Results\n        $85a5f86b715fe7db$var$state.search.query = query;\n        const data = await $85a5f86b715fe7db$var$getJSON(`${$85a5f86b715fe7db$var$API_URL}track.search?q_track_artist=${encodeURIComponent(query)}&page_size=${$85a5f86b715fe7db$var$numResults}&apikey=${apiKey}&s_track_rating=DESC\r\n      `);\n        if (!data) return $85a5f86b715fe7db$var$renderError($85a5f86b715fe7db$var$searchResultView);\n        // Refactoring search result and pushing in state\n        $85a5f86b715fe7db$var$state.search.results = data.message.body.track_list.map(({ track: track })=>{\n            return {\n                title: track.track_name,\n                commontrackId: track.commontrack_id,\n                albumName: track.album_name,\n                artistName: track.artist_name\n            };\n        });\n        // 3. Render Search Results\n        $85a5f86b715fe7db$var$renderSearchResult();\n    } catch (err) {\n        console.error(err);\n        $85a5f86b715fe7db$var$renderError($85a5f86b715fe7db$var$searchResultView, `${err}`);\n    }\n};\n$85a5f86b715fe7db$var$searchForm.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    // bringing value of page to 1\n    $85a5f86b715fe7db$var$state.search.page = 1;\n    // Loading saerch result\n    $85a5f86b715fe7db$var$loadSearchResults();\n    // state.search.page;\n    $85a5f86b715fe7db$var$renderPagination();\n    // Loading Pagination\n    $85a5f86b715fe7db$var$loadPagination();\n});\nwindow.addEventListener(\"hashchange\", $85a5f86b715fe7db$var$loadLyrics);\nwindow.addEventListener(\"load\", $85a5f86b715fe7db$var$loadLyrics);\n$85a5f86b715fe7db$var$showAboutUs.addEventListener(\"click\", ()=>{\n    $85a5f86b715fe7db$var$modal.showModal();\n});\n$85a5f86b715fe7db$var$closeBtn.addEventListener(\"click\", ()=>{\n    $85a5f86b715fe7db$var$modal.close();\n});\n\n\n//# sourceMappingURL=index.895e1e4a.js.map\n","// import { geniusApiKey, musixApiKey } from \"../..\";\r\n\r\nconst API_URL = \"https://api.musixmatch.com/ws/1.1/\";\r\n// const apiKey = process.env.;\r\n// const apiKeyGen = geniusApiKey;\r\nconst errorMessage = \"We couldn't find lyrics. try something else ...\";\r\n// Search Selector\r\nconst searchForm = document.querySelector(\".search\");\r\nconst searchInputText = document.querySelector(\".search__field\");\r\nconst searchResultView = document.querySelector(\".results\");\r\nlet numResults = 50; // numbers of results - range is 0 - 100\r\nconst trackContainer = document.querySelector(\".music\");\r\nconst headEl = document.getElementsByTagName(\"head\")[0];\r\n// pagination selector\r\nconst paginationContainer = document.querySelector(\".pagination\");\r\n// modal selectors\r\nconst modal = document.querySelector(\".modal\");\r\nconst showAboutUs = document.querySelector(\".nav__btn--about-us\");\r\nconst closeBtn = document.querySelector(\".modal__btn-close\");\r\n\r\nconsole.log(`${process.env.MUSIX_API_KEY}`);\r\n\r\nlet state = {\r\n  music: {},\r\n  search: {\r\n    query: \"\",\r\n    results: [],\r\n    resultsView: [],\r\n    perPage: 10,\r\n    page: 1,\r\n  },\r\n};\r\n\r\nconst getJSON = async function (url) {\r\n  try {\r\n    const res = await fetch(url);\r\n    const data = await res.json();\r\n\r\n    // first: for when api authentication is wrong, second: for when no track found.\r\n    if (data.message.body.length === 0) {\r\n      throw new Error(`Status Code: ${data.message.header.status_code}`);\r\n    } else if (data.message.header.available === 0) {\r\n      throw new Error(`Not found Any Track!`);\r\n    }\r\n    return data;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nconst getQuery = function () {\r\n  const query = searchInputText.value;\r\n  searchInputText.value = \"\";\r\n  return query;\r\n};\r\n\r\nconst renderSpinner = function (parentElement) {\r\n  const markup = `\r\n  <div class=\"u-margin-top-big spinner\"></div>\r\n  `;\r\n  parentElement.innerHTML = \"\";\r\n  parentElement.insertAdjacentHTML(\"afterbegin\", markup);\r\n};\r\n\r\nconst renderError = function (parentElement, message = errorMessage) {\r\n  if (message.includes(\"is not valid JSON\")) {\r\n    message = \"There is some problem with Genius Api. Try again later.\";\r\n  }\r\n\r\n  const markup = `\r\n          <div class=\"error\">\r\n            <div>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" class=\"svg-icon\" style=\"color:#e40000;\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\" />\r\n          </svg>\r\n          \r\n            </div>\r\n            <p>${message}</p>\r\n          </div>\r\n  `;\r\n  parentElement.innerHTML = \"\";\r\n  parentElement.insertAdjacentHTML(\"afterbegin\", markup);\r\n};\r\n\r\nconst loadLyrics = async function () {\r\n  try {\r\n    let markup;\r\n    // Taking id track and putting in id\r\n\r\n    const id = window.location.hash.slice(1);\r\n    if (!id) return;\r\n    console.log(id);\r\n\r\n    // 1) Loading Lyrics and Music data\r\n\r\n    // Spinner\r\n    renderSpinner(trackContainer);\r\n\r\n    // taking lyrics data\r\n    const lyricsData = await getJSON(\r\n      `${API_URL}track.lyrics.get?commontrack_id=${id}&apikey=${apiKey}`\r\n    );\r\n\r\n    // taking track data\r\n    const data = await getJSON(\r\n      `${API_URL}track.get?commontrack_id=${id}&apikey=${apiKey}`\r\n    );\r\n\r\n    const dataRes = state.search.results;\r\n\r\n    // Reformating lyricsData\r\n    let { lyrics } = lyricsData.message.body;\r\n    console.log(lyrics);\r\n    lyrics = {\r\n      id: lyrics.lyrics_id,\r\n      body: lyrics.lyrics_body,\r\n      script: lyrics.script_tracking_url,\r\n      imagePixel: lyrics.pixel_tracking_url,\r\n      copyright: lyrics.lyrics_copyright,\r\n      updatedTime: lyrics.updated_time,\r\n    };\r\n\r\n    // pushing lyrics.script into <head>\r\n    const lyricsScript = `<script type=\"text/javascript\" src=\"${lyrics.script}\">`;\r\n    headEl.insertAdjacentHTML(\"beforeend\", lyricsScript);\r\n\r\n    // Reformating track data\r\n    let { track } = data.message.body;\r\n    console.log(track);\r\n    track = {\r\n      id: track.track_id,\r\n      title: track.track_name,\r\n      commontrackId: track.commontrack_id,\r\n      hasLyrics: track.has_lyrics,\r\n      explicit: track.explicit,\r\n      favourite: track.num_favourite,\r\n      albumId: track.album_id,\r\n      albumName: track.album_name,\r\n      artistId: track.artist_id,\r\n      artistName: track.artist_name,\r\n      updatedTime: track.updated_time,\r\n      ...(track.primary_genres.music_genre_list.length !== 0 && {\r\n        genre:\r\n          track.primary_genres.music_genre_list[0].music_genre.music_genre_name,\r\n      }),\r\n      // genre:\r\n      //   track.primary_genres.music_genre_list[0].music_genre.music_genre_name,\r\n      genres: track.primary_genres.music_genre_list,\r\n    };\r\n\r\n    // genuis api\r\n\r\n    const searchUrl = `https://api.genius.com/search?q=${encodeURIComponent(\r\n      track.artistName + \" \" + track.title\r\n    )}&access_token=${apiKeyGen}`;\r\n\r\n    const resGen = await fetch(searchUrl);\r\n    const dataGen = await resGen.json();\r\n    console.log(resGen);\r\n    console.log(dataGen);\r\n    let result = {};\r\n\r\n    if (dataGen.response.hits.length !== 0) {\r\n      result = dataGen.response.hits[0].result;\r\n\r\n      console.log(result);\r\n\r\n      result = {\r\n        headerThumbnail: result.header_image_thumbnail_url,\r\n        headerImage: result.song_art_image_url,\r\n        ...(result.release_date_components && {\r\n          releaseDate: result.release_date_components.year,\r\n        }),\r\n        artistImageHeader: result.primary_artist.header_image_url,\r\n      };\r\n    }\r\n\r\n    // 2) Rendering Lyrics and Music info\r\n    markup = `\r\n        <figure class=\"artist\">\r\n            <img\r\n              src=\"${\r\n                result.artistImageHeader\r\n                  ? result.artistImageHeader\r\n                  : \"src/img/404.png\"\r\n              }\"\r\n              alt=\"${track.artistName ? result.artistName : \"not found\"}\"\r\n              class=\"artist__image\"\r\n          />\r\n        </figure>\r\n        \r\n          \r\n          <div class=\"music__details u-margin-bottom-medium\">\r\n          <img\r\n              src=\"${\r\n                result.headerImage ? result.headerImage : \"src/img/404.png\"\r\n              }\"\r\n              alt=\"${track.title ? result.title : \"not found\"}\"\r\n              class=\"music__image\"\r\n          />\r\n            <div class=\"music__info\">\r\n              <p><span>${track.title}</span></p>\r\n              <p>\r\n                <span>${track.artistName}</span> &#9679 <span>${\r\n                  track.albumName\r\n                }</span>${\r\n                  result.releaseDate\r\n                    ? ` &#9679 <span>${result.releaseDate}</span>`\r\n                    : \"\"\r\n                }\r\n                ${track.genre ? ` &#9679 <span>${track.genre}</span>` : \"\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n        <div class=\"music__lyrics\">\r\n\r\n        ${\r\n          !track.hasLyrics\r\n            ? `<p class=\"paragraph\">\"There is no lyrics for this song or Maybe It's is a instrumental :)\"</p>`\r\n            : `\r\n                    <p class=\"music__lyrics--body paragraph\">${lyrics.body}</p>\r\n               \r\n                    <img class=\"music__image-pixel\" src=\"${lyrics.imagePixel}\" alt=\"image pixel\" />\r\n                    <div class=\"music__copyright\">\r\n                    <span style=\"line-height:54px;vertical-align:top;\">Lyrics licensed by </span><img src=\"../img/mxm.png\" width=\"184\" height=\"54\" alt=\"MusixMatch\">\r\n                    </div>\r\n                    `\r\n        }\r\n        </div>\r\n    `;\r\n    trackContainer.innerHTML = \"\";\r\n    trackContainer.insertAdjacentHTML(\"afterbegin\", markup);\r\n  } catch (err) {\r\n    console.error(`${err} 🏀🏀🏀`);\r\n    renderError(trackContainer, `${err}`);\r\n  }\r\n};\r\n\r\nconst markupPagination = function () {\r\n  const numPages = numResults / state.search.perPage;\r\n  const curPage = state.search.page;\r\n\r\n  // Created Button based on condition\r\n  const createButton = (classModifier, pathData) => `\r\n\r\n    <button\r\n      data-goto=\"${classModifier === \"prev\" ? curPage - 1 : curPage + 1}\"\r\n      class=\"pagination__btn btn--inline pagination__btn--${classModifier}\">\r\n\r\n      ${classModifier === \"next\" ? `<span>Page ${curPage + 1}</span>` : \"\"}\r\n      \r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"svg-icon\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"${pathData}\" />\r\n      </svg>\r\n\r\n      ${classModifier === \"prev\" ? `<span>Page ${curPage - 1}</span>` : \"\"}\r\n    </button>\r\n  `;\r\n\r\n  // Page 1, there are other Pages\r\n  if (curPage === 1 && numPages > 1) {\r\n    return createButton(\"next\", \"M8.25 4.5l7.5 7.5-7.5 7.5\");\r\n  }\r\n\r\n  // Last Page\r\n  if (curPage === numPages && numPages > 1) {\r\n    return createButton(\"prev\", \"M15.75 19.5L8.25 12l7.5-7.5\");\r\n  }\r\n\r\n  // Other Pages (no first, no last)\r\n  if (numPages > curPage) {\r\n    const prevButton = createButton(\"prev\", \"M15.75 19.5L8.25 12l7.5-7.5\");\r\n    const nextButton = createButton(\"next\", \"M8.25 4.5l7.5 7.5-7.5 7.5\");\r\n    return prevButton + nextButton;\r\n  }\r\n\r\n  // Page 1, there are no other Pages\r\n  return \"\";\r\n};\r\n\r\nconst renderPagination = function () {\r\n  const paginationMarkup = markupPagination();\r\n\r\n  // Emptying pagination\r\n  paginationContainer.innerHTML = \"\";\r\n\r\n  // Render pagination\r\n  paginationContainer.insertAdjacentHTML(\"afterbegin\", paginationMarkup);\r\n};\r\n\r\nconst renderSearchResult = function (page = state.search.page) {\r\n  state.search.page = page;\r\n\r\n  const start = (page - 1) * state.search.perPage; // if page is 1 it will be 0\r\n  const end = page * state.search.perPage; // // if page is 1 it will be 9\r\n\r\n  state.search.resultsView = state.search.results.slice(start, end);\r\n\r\n  const resultMarkup = state.search.resultsView\r\n    .map(\r\n      (track) => `\r\n      <li class=\"preview\">\r\n        <a href=\"#${track.commontrackId}\" class=\"preview__link\">\r\n          <div class=\"preview__data\">\r\n          <h3 class=\"preview__title\">${track.title}</h3>\r\n          <p class=\"preview__artist-album\">${track.artistName}<span> &#9679 </span>${track.albumName}</p>\r\n          </div>\r\n          </a>\r\n          </li>\r\n          `\r\n    )\r\n    .join(\"\");\r\n\r\n  // Emptying result history\r\n  searchResultView.innerHTML = \"\";\r\n\r\n  // Render results\r\n  searchResultView.insertAdjacentHTML(\"afterbegin\", resultMarkup);\r\n};\r\n\r\nconst loadPagination = function () {\r\n  paginationContainer.addEventListener(\"click\", function (e) {\r\n    const btn = e.target.closest(\".pagination__btn\");\r\n    if (!btn) return;\r\n\r\n    const goToPage = +btn.dataset.goto;\r\n\r\n    // render SearchResult\r\n    renderSearchResult(goToPage);\r\n\r\n    // render Pagination\r\n    renderPagination();\r\n  });\r\n};\r\n\r\nconst getSearchResultsPage = function (page = state.search.page) {\r\n  state.search.page = page;\r\n\r\n  const start = (page - 1) * state.search.perPage; // if page is 1 it will be 0\r\n  const end = page * state.search.perPage; // // if page is 1 it will be 9\r\n\r\n  state.search.resultsView = state.search.results.slice(start, end);\r\n\r\n  return state.search.resultsView;\r\n};\r\n\r\nconst loadSearchResults = async function () {\r\n  try {\r\n    renderSpinner(searchResultView);\r\n\r\n    // 1) Get search query\r\n    const query = await getQuery();\r\n    if (!query) return;\r\n\r\n    // 2) Load Search Results\r\n    state.search.query = query;\r\n\r\n    const data =\r\n      await getJSON(`${API_URL}track.search?q_track_artist=${encodeURIComponent(\r\n        query\r\n      )}&page_size=${numResults}&apikey=${apiKey}&s_track_rating=DESC\r\n      `);\r\n\r\n    if (!data) return renderError(searchResultView);\r\n\r\n    // Refactoring search result and pushing in state\r\n    state.search.results = data.message.body.track_list.map(({ track }) => {\r\n      return {\r\n        title: track.track_name,\r\n        commontrackId: track.commontrack_id,\r\n        albumName: track.album_name,\r\n        artistName: track.artist_name,\r\n      };\r\n    });\r\n\r\n    // 3. Render Search Results\r\n\r\n    renderSearchResult();\r\n  } catch (err) {\r\n    console.error(err);\r\n    renderError(searchResultView, `${err}`);\r\n  }\r\n};\r\n\r\nsearchForm.addEventListener(\"submit\", function (e) {\r\n  e.preventDefault();\r\n  // bringing value of page to 1\r\n  state.search.page = 1;\r\n\r\n  // Loading saerch result\r\n  loadSearchResults();\r\n\r\n  // state.search.page;\r\n  renderPagination();\r\n\r\n  // Loading Pagination\r\n  loadPagination();\r\n});\r\n\r\nwindow.addEventListener(\"hashchange\", loadLyrics);\r\n\r\nwindow.addEventListener(\"load\", loadLyrics);\r\n\r\nshowAboutUs.addEventListener(\"click\", () => {\r\n  modal.showModal();\r\n});\r\n\r\ncloseBtn.addEventListener(\"click\", () => {\r\n  modal.close();\r\n});\r\n"],"names":["$85a5f86b715fe7db$var$API_URL","$85a5f86b715fe7db$var$searchForm","document","querySelector","$85a5f86b715fe7db$var$searchInputText","$85a5f86b715fe7db$var$searchResultView","$85a5f86b715fe7db$var$trackContainer","$85a5f86b715fe7db$var$headEl","getElementsByTagName","$85a5f86b715fe7db$var$paginationContainer","$85a5f86b715fe7db$var$modal","$85a5f86b715fe7db$var$showAboutUs","$85a5f86b715fe7db$var$closeBtn","console","log","$85a5f86b715fe7db$var$state","search","query","results","resultsView","perPage","page","$85a5f86b715fe7db$var$getJSON","url","res","fetch","data","json","message","body","length","Error","header","status_code","available","err","$85a5f86b715fe7db$var$getQuery","value","$85a5f86b715fe7db$var$renderSpinner","parentElement","markup","innerHTML","insertAdjacentHTML","$85a5f86b715fe7db$var$renderError","includes","$85a5f86b715fe7db$var$loadLyrics","id","window","location","hash","slice","lyricsData","apiKey","lyrics","lyrics_id","lyrics_body","script","script_tracking_url","imagePixel","pixel_tracking_url","copyright","lyrics_copyright","updatedTime","updated_time","lyricsScript","track","track_id","title","track_name","commontrackId","commontrack_id","hasLyrics","has_lyrics","explicit","favourite","num_favourite","albumId","album_id","albumName","album_name","artistId","artist_id","artistName","artist_name","primary_genres","music_genre_list","genre","music_genre","music_genre_name","genres","searchUrl","encodeURIComponent","apiKeyGen","resGen","dataGen","result","response","hits","headerThumbnail","header_image_thumbnail_url","headerImage","song_art_image_url","release_date_components","releaseDate","year","artistImageHeader","primary_artist","header_image_url","error","$85a5f86b715fe7db$var$markupPagination","numPages","$85a5f86b715fe7db$var$numResults","curPage","createButton","classModifier","pathData","prevButton","$85a5f86b715fe7db$var$renderPagination","paginationMarkup","$85a5f86b715fe7db$var$renderSearchResult","start","end","resultMarkup","map","join","$85a5f86b715fe7db$var$loadPagination","addEventListener","e","btn","target","closest","dataset","goto","$85a5f86b715fe7db$var$loadSearchResults","track_list","preventDefault","showModal","close"],"version":3,"file":"index.895e1e4a.js.map"}